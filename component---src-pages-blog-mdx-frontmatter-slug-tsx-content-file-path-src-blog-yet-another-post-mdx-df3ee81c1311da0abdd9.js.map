{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-tsx-content-file-path-src-blog-yet-another-post-mdx-df3ee81c1311da0abdd9.js","mappings":"oNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,MACFC,EAAAA,EAAAA,MAAsBL,EAAMM,YAC/B,OAAOC,EAAAA,cAAoBN,EAAYG,EAAG,KAAM,mDAClD,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOQ,QAASC,GAAaP,OAAOC,OAAO,CAAC,GAAGE,EAAAA,EAAAA,MAAsBL,EAAMM,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWT,EAAOO,EAAAA,cAAoBR,EAAmBC,IAAUD,EAAkBC,EAC9H,E,oBCRA,MAAMU,EAAWC,IACf,IAAI,KAACC,EAAI,SAAEC,GAAYF,EACvB,OAAOJ,EAAAA,cAAoBO,EAAAA,EAAQ,CACjCC,UAAWH,EAAKI,IAAIC,YAAYC,OAC/BX,EAAAA,cAAoB,IAAK,KAAMK,EAAKI,IAAIC,YAAYE,MAAON,EAAS,EAG5DO,EAAOC,IAClB,IAAI,KAACT,GAAQS,EACb,OAAOd,EAAAA,cAAoBe,EAAAA,EAAK,CAC9BJ,MAAON,EAAKI,IAAIC,YAAYC,OAC5B,EAGW,SAASK,EAAiBvB,GACvC,OAAOO,EAAAA,cAAoBG,EAAUV,EAAOO,EAAAA,cAAoBiB,EAAqBxB,GACvF,C,+ECjBWyB,EAAc,sCACdC,EAAc,sCC4CzB,MAhCef,IAAwC,IAAvC,UAAEI,EAAS,SAAEF,GAAoB,EAC/C,MAAMD,GAAOe,EAAAA,EAAAA,gBAAe,cAS5B,OACEpB,EAAAA,cAAAA,MAAAA,CAAKqB,UD1Bc,mCC2BjBrB,EAAAA,cAAAA,SAAAA,CAAQqB,UDtBS,oCCsBchB,EAAKiB,KAAKC,aAAaZ,OACtDX,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,KAAAA,CAAIqB,UDzBU,mCC0BZrB,EAAAA,cAAAA,KAAAA,CAAIqB,UAAWH,GAAalB,EAAAA,cAACwB,EAAAA,KAAI,CAACC,GAAG,IAAIJ,UAAWF,GAAa,SACjEnB,EAAAA,cAAAA,KAAAA,CAAIqB,UAAWH,GAAalB,EAAAA,cAACwB,EAAAA,KAAI,CAACC,GAAG,SAASJ,UAAWF,GAAa,UACtEnB,EAAAA,cAAAA,KAAAA,CAAIqB,UAAWH,GACblB,EAAAA,cAACwB,EAAAA,KAAI,CAACC,GAAG,QAAQJ,UAAWF,GAAa,WAM/CnB,EAAAA,cAAAA,OAAAA,KACEA,EAAAA,cAAAA,KAAAA,CAAIqB,UDvCS,iCCuCYb,GACxBF,GAEC,C,+CCvBV,IAhBYF,IAAwB,IAAvB,MAAEO,GAAe,EAC5B,MAAMN,GAAOe,EAAAA,EAAAA,gBAAe,cAU5B,OACEpB,EAAAA,cAAAA,QAAAA,KAAQW,EAAM,MAAIN,EAAKiB,KAAKC,aAAaZ,MAAc,C,sECgBpD,MAAMe,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiB5B,GAC/B,MAAM6B,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAf3B,EACFA,EAAW6B,GAGb,IAAIA,KAAsB7B,IAChC,CAAC6B,EAAmB7B,GACzB,C","sources":["webpack://my-gatsby-site/./src/blog/yet-another-post.mdx","webpack://my-gatsby-site/./src/pages/blog/{mdx.frontmatter__slug}.tsx","webpack://my-gatsby-site/./src/components/layout.module.css","webpack://my-gatsby-site/./src/components/layout.tsx","webpack://my-gatsby-site/./src/components/seo.tsx","webpack://my-gatsby-site/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.p, null, \"Wow look at all this content. How do they do it?\");\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"C:/Users/oven4/source/repos/Blog/src/blog/yet-another-post.mdx\";\nimport * as React from 'react';\nimport Layout from '../../components/layout';\nimport Seo from '../../components/seo';\nconst BlogPost = _ref => {\n  let {data, children} = _ref;\n  return React.createElement(Layout, {\n    pageTitle: data.mdx.frontmatter.title\n  }, React.createElement(\"p\", null, data.mdx.frontmatter.date), children);\n};\nconst query = \"1083539204\";\nexport const Head = _ref2 => {\n  let {data} = _ref2;\n  return React.createElement(Seo, {\n    title: data.mdx.frontmatter.title\n  });\n};\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--78b04\";\nexport var heading = \"layout-module--heading--f158c\";\nexport var navLinkItem = \"layout-module--nav-link-item--a5f0a\";\nexport var navLinkText = \"layout-module--nav-link-text--69cda\";\nexport var navLinks = \"layout-module--nav-links--1113b\";\nexport var siteTitle = \"layout-module--site-title--e4dea\";","import * as React from 'react'\r\nimport { Link, useStaticQuery, graphql } from 'gatsby'\r\nimport {\r\n  container,\r\n  heading,\r\n  navLinks,\r\n  navLinkItem,\r\n  navLinkText,\r\n  siteTitle\r\n} from './layout.module.css'\r\nimport { ReactNode } from '@mdx-js/react/lib';\r\n\r\ntype AppProps = {\r\n    pageTitle: string;\r\n    children : ReactNode;\r\n  };\r\nconst Layout = ({ pageTitle, children }: AppProps) => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  return (\r\n    <div className={container}>\r\n      <header className={siteTitle}>{data.site.siteMetadata.title}</header>\r\n      <nav>\r\n        <ul className={navLinks}>\r\n          <li className={navLinkItem}><Link to=\"/\" className={navLinkText}>Home</Link></li>\r\n          <li className={navLinkItem}><Link to=\"/about\" className={navLinkText}>About</Link></li>\r\n          <li className={navLinkItem}>\r\n            <Link to=\"/blog\" className={navLinkText}>\r\n              Blog\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <main>\r\n        <h1 className={heading}>{pageTitle}</h1>\r\n        {children}\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n\r\n//https://react-typescript-cheatsheet.netlify.app/docs/basic/getting-started/forms_and_events\r\n//https://www.gatsbyjs.com/docs/tutorial/getting-started/part-3/","import * as React from 'react'\r\nimport { graphql, useStaticQuery } from 'gatsby'\r\ntype SeoArgs = {\r\n    title: string;\r\n  };\r\nconst Seo = ({ title }:SeoArgs) => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <title>{title} | {data.site.siteMetadata.title}</title>\r\n  )\r\n}\r\n\r\nexport default Seo","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","_provideComponents","components","React","wrapper","MDXLayout","BlogPost","_ref","data","children","Layout","pageTitle","mdx","frontmatter","title","date","Head","_ref2","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","navLinkItem","navLinkText","useStaticQuery","className","site","siteMetadata","Link","to","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}