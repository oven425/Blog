{"version":3,"file":"component---src-pages-mdx-frontmatter-slug-tsx-content-file-path-src-blog-forward-ref-mdx-a000d634e46cea1471bb.js","mappings":"mNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,KAAM,SACLC,EAAAA,EAAAA,MAAsBN,EAAMO,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,oCAAqC,KAAMI,EAAAA,cAAoBP,EAAYI,KAAM,CACzKI,wBAAyB,CACvBC,OAAQ,o2DAER,KAAMF,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,2BAA4B,KAAMI,EAAAA,cAAoBP,EAAYI,KAAM,CACzHI,wBAAyB,CACvBC,OAAQ,qhCAER,KAAMF,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,kDAAmD,KAAMI,EAAAA,cAAoBP,EAAYI,KAAM,CAChJI,wBAAyB,CACvBC,OAAQ,ylCAER,KAAMF,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,uBAAwB,KAAMI,EAAAA,cAAoBP,EAAYI,KAAM,CACrHI,wBAAyB,CACvBC,OAAQ,w7DAGd,CAKA,MAJA,SAAoBV,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOW,QAASC,GAAaV,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOK,EAAYJ,EAAAA,cAAoBI,EAAWZ,EAAOQ,EAAAA,cAAoBT,EAAmBC,IAAUD,EAAkBC,EAC9H,E,oBCzBA,MAAMa,EAAWC,IACf,IAAI,KAACC,EAAI,SAAEC,GAAYF,EACvB,OAAON,EAAAA,cAAoBS,EAAAA,EAAQ,KAAMD,EAAS,EAGvCE,EAAOC,IAClB,IAAI,KAACJ,GAAQI,EACb,OAAOX,EAAAA,cAAoBY,EAAAA,EAAK,CAC9BC,MAAON,EAAKO,IAAIC,YAAYF,OAC5B,EAGW,SAASG,EAAiBxB,GACvC,OAAOQ,EAAAA,cAAoBK,EAAUb,EAAOQ,EAAAA,cAAoBiB,EAAqBzB,GACvF,C,sECeO,MAAM0B,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBpB,GAC/B,MAAMqB,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAfnB,EACFA,EAAWqB,GAGb,IAAIA,KAAsBrB,IAChC,CAACqB,EAAmBrB,GACzB,C","sources":["webpack://my-gatsby-site/./src/blog/forwardRef.mdx","webpack://my-gatsby-site/./src/pages/{mdx.frontmatter__slug}.tsx","webpack://my-gatsby-site/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"一般要使用html的tag是直接用useRef即可,如以下程式碼\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"tsx\\\"><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token function-variable function\\\">App</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">=></span><span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token keyword\\\">const</span> btn <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useRef</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">)</span>\\r\\n    <span class=\\\"token keyword\\\">return</span><span class=\\\"token punctuation\\\">(</span>\\r\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\r\\n            </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>button</span> <span class=\\\"token attr-name\\\">ref</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>btn<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">Button</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>button</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\r\\n        </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">)</span>\\r\\n<span class=\\\"token punctuation\\\">}</span>\\r\\n</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"但通常會自己包一些component,例如以下\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"tsx\\\"><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">ChildWindow</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">=></span><span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\r\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\r\\n            ChildWindow\\r\\n        </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\r\\n    <span class=\\\"token punctuation\\\">)</span>\\r\\n<span class=\\\"token punctuation\\\">}</span>\\r\\n</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"如果要對ChildWindow使用useRef,則必須要把ChildWindow改成下面這樣\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"tsx\\\"><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> ChildWindow <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">forwardRef</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">=></span><span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\r\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\r\\n            ChildWindow\\r\\n        </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\r\\n    <span class=\\\"token punctuation\\\">)</span>\\r\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"加上了forwardRef外部才能使用\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"tsx\\\"><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token function-variable function\\\">App</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">=></span><span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token keyword\\\">const</span> cw <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useRef</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">)</span>\\r\\n    <span class=\\\"token keyword\\\">return</span><span class=\\\"token punctuation\\\">(</span>\\r\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\r\\n            </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">ChildWindow</span></span> <span class=\\\"token attr-name\\\">ref</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>cw<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">Button</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">ChildWindow</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\r\\n        </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">)</span>\\r\\n<span class=\\\"token punctuation\\\">}</span>\\r\\n</code></pre></div>\"\n    }\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"C:/Users/oven4/source/repos/Blog/src/blog/forwardRef.mdx\";\nimport * as React from 'react';\nimport Layout from '../components/layout';\nimport Seo from '../components/seo';\nconst BlogPost = _ref => {\n  let {data, children} = _ref;\n  return React.createElement(Layout, null, children);\n};\nconst query = \"1083539204\";\nexport const Head = _ref2 => {\n  let {data} = _ref2;\n  return React.createElement(Seo, {\n    title: data.mdx.frontmatter.title\n  });\n};\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","span","_provideComponents","components","React","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","BlogPost","_ref","data","children","Layout","Head","_ref2","Seo","title","mdx","frontmatter","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}