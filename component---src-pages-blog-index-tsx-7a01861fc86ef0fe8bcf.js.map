{"version":3,"file":"component---src-pages-blog-index-tsx-7a01861fc86ef0fe8bcf.js","mappings":"6KAGWA,EAAc,sCACdC,EAAc,sCC4CzB,MAhCeC,IAAwC,IAAvC,UAAEC,EAAS,SAAEC,GAAoB,EAC/C,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,cAS5B,OACEC,EAAAA,cAAAA,MAAAA,CAAKC,UD1Bc,mCC2BjBD,EAAAA,cAAAA,SAAAA,CAAQC,UDtBS,oCCsBcH,EAAKI,KAAKC,aAAaC,OACtDJ,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,KAAAA,CAAIC,UDzBU,mCC0BZD,EAAAA,cAAAA,KAAAA,CAAIC,UAAWR,GAAaO,EAAAA,cAACK,EAAAA,KAAI,CAACC,GAAG,IAAIL,UAAWP,GAAa,SACjEM,EAAAA,cAAAA,KAAAA,CAAIC,UAAWR,GAAaO,EAAAA,cAACK,EAAAA,KAAI,CAACC,GAAG,SAASL,UAAWP,GAAa,UACtEM,EAAAA,cAAAA,KAAAA,CAAIC,UAAWR,GACbO,EAAAA,cAACK,EAAAA,KAAI,CAACC,GAAG,QAAQL,UAAWP,GAAa,WAM/CM,EAAAA,cAAAA,OAAAA,KACEA,EAAAA,cAAAA,KAAAA,CAAIC,UDvCS,iCCuCYL,GACxBC,GAEC,C,+CCvBV,IAhBYF,IAAwB,IAAvB,MAAES,GAAe,EAC5B,MAAMN,GAAOC,EAAAA,EAAAA,gBAAe,cAU5B,OACEC,EAAAA,cAAAA,QAAAA,KAAQI,EAAM,MAAIN,EAAKI,KAAKC,aAAaC,MAAc,C,6GCD3D,MAmCaG,EAAO,IAAMP,EAAAA,cAACQ,EAAAA,EAAG,CAACJ,MAAM,kBAErC,UArCiBT,IAAkC,IAAjC,KAAEG,GAA0B,EAE5C,OADAW,QAAQC,IAAIZ,EAAKa,OAAOC,OAEtBZ,EAAAA,cAACa,EAAAA,EAAM,CAACjB,UAAU,iBAEdE,EAAKa,OAAOC,MAAME,KAAIC,GACpBf,EAAAA,cAAAA,UAAAA,CAASgB,IAAKD,EAAKE,IACjBjB,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAACK,EAAAA,KAAI,CAACC,GAAE,SAAWS,EAAKG,YAAYC,MACjCJ,EAAKG,YAAYd,QAGtBJ,EAAAA,cAAAA,IAAAA,KAAG,WAASe,EAAKG,YAAYE,SAI5B,C","sources":["webpack://my-gatsby-site/./src/components/layout.module.css","webpack://my-gatsby-site/./src/components/layout.tsx","webpack://my-gatsby-site/./src/components/seo.tsx","webpack://my-gatsby-site/./src/pages/blog/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--78b04\";\nexport var heading = \"layout-module--heading--f158c\";\nexport var navLinkItem = \"layout-module--nav-link-item--a5f0a\";\nexport var navLinkText = \"layout-module--nav-link-text--69cda\";\nexport var navLinks = \"layout-module--nav-links--1113b\";\nexport var siteTitle = \"layout-module--site-title--e4dea\";","import * as React from 'react'\r\nimport { Link, useStaticQuery, graphql } from 'gatsby'\r\nimport {\r\n  container,\r\n  heading,\r\n  navLinks,\r\n  navLinkItem,\r\n  navLinkText,\r\n  siteTitle\r\n} from './layout.module.css'\r\nimport { ReactNode } from '@mdx-js/react/lib';\r\n\r\ntype AppProps = {\r\n    pageTitle: string;\r\n    children : ReactNode;\r\n  };\r\nconst Layout = ({ pageTitle, children }: AppProps) => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  return (\r\n    <div className={container}>\r\n      <header className={siteTitle}>{data.site.siteMetadata.title}</header>\r\n      <nav>\r\n        <ul className={navLinks}>\r\n          <li className={navLinkItem}><Link to=\"/\" className={navLinkText}>Home</Link></li>\r\n          <li className={navLinkItem}><Link to=\"/about\" className={navLinkText}>About</Link></li>\r\n          <li className={navLinkItem}>\r\n            <Link to=\"/blog\" className={navLinkText}>\r\n              Blog\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <main>\r\n        <h1 className={heading}>{pageTitle}</h1>\r\n        {children}\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n\r\n//https://react-typescript-cheatsheet.netlify.app/docs/basic/getting-started/forms_and_events\r\n//https://www.gatsbyjs.com/docs/tutorial/getting-started/part-3/","import * as React from 'react'\r\nimport { graphql, useStaticQuery } from 'gatsby'\r\ntype SeoArgs = {\r\n    title: string;\r\n  };\r\nconst Seo = ({ title }:SeoArgs) => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <title>{title} | {data.site.siteMetadata.title}</title>\r\n  )\r\n}\r\n\r\nexport default Seo","import * as React from 'react'\r\nimport { Link, graphql, PageProps } from 'gatsby'\r\nimport Layout from '../../components/layout'\r\nimport Seo from '../../components/seo'\r\ntype DataType={\r\n  allMdx:{\r\n    nodes:{\r\n      frontmatter:{\r\n        date:string,\r\n        title:string,\r\n        slug:string\r\n      },\r\n      id:string\r\n    }[]\r\n  }\r\n}\r\nconst BlogPage = ({ data }:PageProps<DataType>) => {\r\n  console.log(data.allMdx.nodes)\r\n  return (\r\n    <Layout pageTitle=\"My Blog Posts\">\r\n      {\r\n        data.allMdx.nodes.map(node => (\r\n          <article key={node.id}>\r\n            <h2>\r\n              <Link to={`/blog/${node.frontmatter.slug}`}>\r\n                {node.frontmatter.title}\r\n              </Link>\r\n            </h2>\r\n            <p>Posted: {node.frontmatter.date}</p>\r\n          </article>\r\n        ))\r\n      }\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMdx(sort: { frontmatter: { date: DESC }}) {\r\n      nodes {\r\n        frontmatter {\r\n          date(formatString: \"MMMM D, YYYY\")\r\n          title\r\n          slug\r\n        }\r\n        id\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const Head = () => <Seo title=\"My Blog Posts\" />\r\n\r\nexport default BlogPage"],"names":["navLinkItem","navLinkText","_ref","pageTitle","children","data","useStaticQuery","React","className","site","siteMetadata","title","Link","to","Head","Seo","console","log","allMdx","nodes","Layout","map","node","key","id","frontmatter","slug","date"],"sourceRoot":""}