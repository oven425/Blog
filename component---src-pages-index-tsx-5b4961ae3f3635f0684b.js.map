{"version":3,"file":"component---src-pages-index-tsx-5b4961ae3f3635f0684b.js","mappings":"2MAwQA,MAkDaA,EAAO,IAAMC,EAAAA,cAACC,EAAAA,EAAG,CAACC,MAAM,cACrC,UAnDkBC,IAAqC,IAApC,KAAEC,GAA6B,EAChD,OAEEJ,EAAAA,cAACK,EAAAA,EAAM,KACLL,EAAAA,cAAAA,KAAAA,CAAIM,UAAU,QAEVF,EAAKG,OAAOC,MAAMC,KAAKC,IAAI,aACzBV,EAAAA,cAAAA,UAAAA,CAASM,UAAU,kBAAkBK,IAAKD,EAAKE,IAC7CZ,EAAAA,cAACa,EAAAA,KAAI,CAACC,GAAK,GAAEJ,EAAKK,YAAYC,QAC5BhB,EAAAA,cAAAA,KAAAA,KAAKU,EAAKK,YAAYb,QAExBF,EAAAA,cAAAA,IAAAA,CAAGM,UAAU,kBAAiB,WAASI,EAAKK,YAAYE,MACxDjB,EAAAA,cAAAA,IAAAA,KAAIU,EAAKQ,SACTlB,EAAAA,cAAAA,MAAAA,CAAKM,UAAU,uBAEQ,QAFa,EAElCI,EAAKK,YAAYI,YAAI,aAArBC,EAAuBX,KAAIY,GACzBrB,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,SAAAA,CAAQM,UAAU,4BAA4Be,OAK5C,KAIT,C","sources":["webpack://my-gatsby-site/./src/pages/index.tsx"],"sourcesContent":["// import * as React from \"react\"\r\n// import type { HeadFC, PageProps } from \"gatsby\"\r\n\r\n// const pageStyles = {\r\n//   color: \"#232129\",\r\n//   padding: 96,\r\n//   fontFamily: \"-apple-system, Roboto, sans-serif, serif\",\r\n// }\r\n// const headingStyles = {\r\n//   marginTop: 0,\r\n//   marginBottom: 64,\r\n//   maxWidth: 320,\r\n// }\r\n// const headingAccentStyles = {\r\n//   color: \"#663399\",\r\n// }\r\n// const paragraphStyles = {\r\n//   marginBottom: 48,\r\n// }\r\n// const codeStyles = {\r\n//   color: \"#8A6534\",\r\n//   padding: 4,\r\n//   backgroundColor: \"#FFF4DB\",\r\n//   fontSize: \"1.25rem\",\r\n//   borderRadius: 4,\r\n// }\r\n// const listStyles = {\r\n//   marginBottom: 96,\r\n//   paddingLeft: 0,\r\n// }\r\n// const doclistStyles = {\r\n//   paddingLeft: 0,\r\n// }\r\n// const listItemStyles = {\r\n//   fontWeight: 300,\r\n//   fontSize: 24,\r\n//   maxWidth: 560,\r\n//   marginBottom: 30,\r\n// }\r\n\r\n// const linkStyle = {\r\n//   color: \"#8954A8\",\r\n//   fontWeight: \"bold\",\r\n//   fontSize: 16,\r\n//   verticalAlign: \"5%\",\r\n// }\r\n\r\n// const docLinkStyle = {\r\n//   ...linkStyle,\r\n//   listStyleType: \"none\",\r\n//   display: `inline-block`,\r\n//   marginBottom: 24,\r\n//   marginRight: 12,\r\n// }\r\n\r\n// const descriptionStyle = {\r\n//   color: \"#232129\",\r\n//   fontSize: 14,\r\n//   marginTop: 10,\r\n//   marginBottom: 0,\r\n//   lineHeight: 1.25,\r\n// }\r\n\r\n// const docLinks = [\r\n//   {\r\n//     text: \"TypeScript Documentation\",\r\n//     url: \"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\",\r\n//     color: \"#8954A8\",\r\n//   },\r\n//   {\r\n//     text: \"GraphQL Typegen Documentation\",\r\n//     url: \"https://www.gatsbyjs.com/docs/how-to/local-development/graphql-typegen/\",\r\n//     color: \"#8954A8\",\r\n//   }\r\n// ]\r\n\r\n// const badgeStyle = {\r\n//   color: \"#fff\",\r\n//   backgroundColor: \"#088413\",\r\n//   border: \"1px solid #088413\",\r\n//   fontSize: 11,\r\n//   fontWeight: \"bold\",\r\n//   letterSpacing: 1,\r\n//   borderRadius: 4,\r\n//   padding: \"4px 6px\",\r\n//   display: \"inline-block\",\r\n//   position: \"relative\" as \"relative\",\r\n//   top: -2,\r\n//   marginLeft: 10,\r\n//   lineHeight: 1,\r\n// }\r\n\r\n// const links = [\r\n//   {\r\n//     text: \"Tutorial\",\r\n//     url: \"https://www.gatsbyjs.com/docs/tutorial/getting-started/\",\r\n//     description:\r\n//       \"A great place to get started if you're new to web development. Designed to guide you through setting up your first Gatsby site.\",\r\n//     color: \"#E95800\",\r\n//   },\r\n//   {\r\n//     text: \"How to Guides\",\r\n//     url: \"https://www.gatsbyjs.com/docs/how-to/\",\r\n//     description:\r\n//       \"Practical step-by-step guides to help you achieve a specific goal. Most useful when you're trying to get something done.\",\r\n//     color: \"#1099A8\",\r\n//   },\r\n//   {\r\n//     text: \"Reference Guides\",\r\n//     url: \"https://www.gatsbyjs.com/docs/reference/\",\r\n//     description:\r\n//       \"Nitty-gritty technical descriptions of how Gatsby works. Most useful when you need detailed information about Gatsby's APIs.\",\r\n//     color: \"#BC027F\",\r\n//   },\r\n//   {\r\n//     text: \"Conceptual Guides\",\r\n//     url: \"https://www.gatsbyjs.com/docs/conceptual/\",\r\n//     description:\r\n//       \"Big-picture explanations of higher-level Gatsby concepts. Most useful for building understanding of a particular topic.\",\r\n//     color: \"#0D96F2\",\r\n//   },\r\n//   {\r\n//     text: \"Plugin Library\",\r\n//     url: \"https://www.gatsbyjs.com/plugins\",\r\n//     description:\r\n//       \"Add functionality and customize your Gatsby site or app with thousands of plugins built by our amazing developer community.\",\r\n//     color: \"#8EB814\",\r\n//   },\r\n//   {\r\n//     text: \"Build and Host\",\r\n//     url: \"https://www.gatsbyjs.com/cloud\",\r\n//     badge: true,\r\n//     description:\r\n//       \"Now youâ€™re ready to show the world! Give your Gatsby site superpowers: Build and host on Gatsby Cloud. Get started for free!\",\r\n//     color: \"#663399\",\r\n//   },\r\n// ]\r\n\r\n// const IndexPage: React.FC<PageProps> = () => {\r\n//   return (\r\n//     <main style={pageStyles}>\r\n//       <h1 style={headingStyles}>\r\n//         Congratulations\r\n//         <br />\r\n//         <span style={headingAccentStyles}>â€” you just made a Gatsby site! ðŸŽ‰ðŸŽ‰ðŸŽ‰</span>\r\n//       </h1>\r\n//       <p style={paragraphStyles}>\r\n//         Edit <code style={codeStyles}>src/pages/index.tsx</code> to see this page\r\n//         update in real-time. ðŸ˜Ž\r\n//       </p>\r\n//       <ul style={doclistStyles}>\r\n//         {docLinks.map(doc => (\r\n//           <li key={doc.url} style={docLinkStyle}>\r\n//             <a\r\n//               style={linkStyle}\r\n//               href={`${doc.url}?utm_source=starter&utm_medium=ts-docs&utm_campaign=minimal-starter-ts`}\r\n//             >\r\n//               {doc.text}\r\n//             </a>\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n//       <ul style={listStyles}>\r\n//         {links.map(link => (\r\n//           <li key={link.url} style={{ ...listItemStyles, color: link.color }}>\r\n//             <span>\r\n//               <a\r\n//                 style={linkStyle}\r\n//                 href={`${link.url}?utm_source=starter&utm_medium=start-page&utm_campaign=minimal-starter-ts`}\r\n//               >\r\n//                 {link.text}\r\n//               </a>\r\n//               {link.badge && (\r\n//                 <span style={badgeStyle} aria-label=\"New Badge\">\r\n//                   NEW!\r\n//                 </span>\r\n//               )}\r\n//               <p style={descriptionStyle}>{link.description}</p>\r\n//             </span>\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n//       <img\r\n//         alt=\"Gatsby G Logo\"\r\n//         src=\"data:image/svg+xml,%3Csvg width='24' height='24' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M12 2a10 10 0 110 20 10 10 0 010-20zm0 2c-3.73 0-6.86 2.55-7.75 6L14 19.75c3.45-.89 6-4.02 6-7.75h-5.25v1.5h3.45a6.37 6.37 0 01-3.89 4.44L6.06 9.69C7 7.31 9.3 5.63 12 5.63c2.13 0 4 1.04 5.18 2.65l1.23-1.06A7.959 7.959 0 0012 4zm-8 8a8 8 0 008 8c.04 0 .09 0-8-8z' fill='%23639'/%3E%3C/svg%3E\"\r\n//       />\r\n//     </main>\r\n//   )\r\n// }\r\n\r\n// export default IndexPage\r\n\r\n// export const Head: HeadFC = () => <title>Home Page</title>\r\nimport * as React from 'react'\r\nimport { Link, PageProps, graphql } from 'gatsby'\r\nimport { StaticImage } from 'gatsby-plugin-image'\r\nimport Seo from '../components/seo'\r\nimport ChildWindow, { ChildWindow_Ref } from '../components/ChildWindow';\r\nimport { useEffect, useRef } from 'react';\r\nimport Layout from '../components/layout';\r\nimport jj from '../images/github.svg'\r\n\r\ntype allMdxType = {\r\n  allMdx: {\r\n    nodes: {\r\n      frontmatter: {\r\n        date: string,\r\n        title: string,\r\n        slug: string,\r\n        tags:Array<string>\r\n      },\r\n      id: string,\r\n      excerpt: string\r\n    }[]\r\n  }\r\n}\r\n\r\n// const IndexPage = ({ data }: PageProps<allMdxType>) => {\r\n//   return (\r\n//     <div className=\"flex flex-col h-screen\">\r\n//       <header className=\" bg-gray-950 h-20 shrink-0\">\r\n//         <div className=\"flex items-center justify-between h-full \">\r\n//           <div className=\"text-white text-3xl font-bold p-1\">\r\n//             Developer notes\r\n//           </div>\r\n//           <div className=\" bg-slate-50 p-1\">\r\n//             <a href='https://github.com/oven425'>\r\n//               <svg height=\"36\" aria-hidden=\"true\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"36\" data-view-component=\"true\" className=\"octicon octicon-mark-github v-align-middle color-fg-default\">\r\n//                 <path d=\"M8 0c4.42 0 8 3.58 8 8a8.013 8.013 0 0 1-5.45 7.59c-.4.08-.55-.17-.55-.38 0-.27.01-1.13.01-2.2 0-.75-.25-1.23-.54-1.48 1.78-.2 3.65-.88 3.65-3.95 0-.88-.31-1.59-.82-2.15.08-.2.36-1.02-.08-2.12 0 0-.67-.22-2.2.82-.64-.18-1.32-.27-2-.27-.68 0-1.36.09-2 .27-1.53-1.03-2.2-.82-2.2-.82-.44 1.1-.16 1.92-.08 2.12-.51.56-.82 1.28-.82 2.15 0 3.06 1.86 3.75 3.64 3.95-.23.2-.44.55-.51 1.07-.46.21-1.61.55-2.33-.66-.15-.24-.6-.83-1.23-.82-.67.01-.27.38.01.53.34.19.73.9.82 1.13.16.45.68 1.31 2.69.94 0 .67.01 1.3.01 1.49 0 .21-.15.45-.55.38A7.995 7.995 0 0 1 0 8c0-4.42 3.58-8 8-8Z\"></path>\r\n//               </svg>\r\n//             </a>\r\n//           </div>\r\n//         </div>\r\n//       </header>\r\n//       <div className=\"flex flex-row h-[calc(100vh-5rem)] bg-white\">\r\n//         <aside className=\"w-1/6 overflow-y-auto\">\r\n//           <ul>\r\n//           <Link to='/'>Blog</Link>\r\n//             <Link to='/about'>About</Link>\r\n//             </ul>\r\n\r\n//         </aside>\r\n//         <main className=\"w-5/6 overflow-y-auto\">\r\n//         {/* <ul>\r\n//         {\r\n//           data.allMdx.nodes.map((node) => (\r\n//             <article key={node.id}>\r\n//               <h2>{node.frontmatter.title}</h2>\r\n//               <p>Posted: {node.frontmatter.date}</p>\r\n//               <p>{node.excerpt}</p>\r\n//             </article>\r\n//           ))\r\n//         }\r\n\r\n//       </ul> */}\r\n//           main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />main content<br />\r\n//         </main>\r\n//       </div>\r\n\r\n//     </div>\r\n\r\n//   )\r\n// };\r\n\r\nconst IndexPage = ({ data }: PageProps<allMdxType>) => {\r\n  return (\r\n\r\n    <Layout>\r\n      <ul className=' m-3'>\r\n        {\r\n          data.allMdx.nodes.map((node) => (\r\n            <article className=' prose prose-lg' key={node.id}>\r\n              <Link to={`${node.frontmatter.slug}`}>\r\n                <h2>{node.frontmatter.title}</h2>\r\n              </Link>\r\n              <p className=' text-blue-400'>Posted: {node.frontmatter.date}</p>\r\n              <p>{node.excerpt}</p>\r\n              <div className='flex flex-row gap-1'>\r\n              {\r\n                node.frontmatter.tags?.map(x=>(\r\n                  <div>\r\n                    <button className=' bg-black text-white p-2'>{x}</button>\r\n                  </div>\r\n                ))\r\n              }\r\n              </div>           \r\n            </article>\r\n          ))\r\n        }\r\n      </ul>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMdx(\r\n      filter: {frontmatter: {published: {eq: true}}}\r\n      sort: {frontmatter: {date: DESC}}\r\n    ) {\r\n      nodes {\r\n        frontmatter {\r\n          date(formatString: \"YYYY-MM-DD\")\r\n          slug\r\n          title\r\n          published\r\n          tags\r\n        }\r\n        excerpt\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`\r\nexport const Head = () => <Seo title=\"Home Page\" />\r\nexport default IndexPage;"],"names":["Head","React","Seo","title","_ref","data","Layout","className","allMdx","nodes","map","node","key","id","Link","to","frontmatter","slug","date","excerpt","tags","_node$frontmatter$tag","x"],"sourceRoot":""}